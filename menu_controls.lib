#!/bin/bash

source network_controls.lib
source interface_controls.lib
source network_attack.lib

status_bar() {

    # :- means if value is unset or empty set local variable to /
    local i="${ifname:-/}"
    local m="${mode:-/}"
    local ca="${channel_adapter:-/}"
    local e="${essid:-/}"
    local b="${bssid:-/}"
    local cn="${channel_network:-/}"

    printf "${BOLDWHITE}Interface: ${GREEN}%-20s${RESET} ${BOLDWHITE} Mode: ${GREEN}%-17s${RESET} ${BOLDWHITE}Channel: ${GREEN}%-2s${RESET}\n" "$i" "$m" "$ca"
    printf "${BOLDWHITE}    ESSID: ${GREEN}%-20s${RESET} ${BOLDWHITE}BSSID: ${GREEN}%-17s${RESET} ${BOLDWHITE}Channel: ${GREEN}%-2s${RESET}\n" "$e" "$b" "$cn"

}

main_menu() {

    while [ true ]; do
        # full terminal reset
        printf '\033c'

        options=(
            "Select WiFi Adapter"
            "Switch Mode    (Managed â®‚ Monitor)"
            "Search and Select Wifi Network"
            "Set Interface Channel to Network Channel"
            "Deauth Devices on Selected Network"
            "Exit"
        )

        PS3=$"> "

        status_bar
        echo "CHOOSE ACTION"
        COLUMNS=1
        select opt in "${options[@]}"; do
            case $REPLY in
                1)
                    select_ifname
                    break
                    ;;
                2)
                    switch_mode
                    read_channel
                    break
                    ;;
                3)
                    scan_network
                    select_network
                    read_channel
                    break
                    ;;
                4)
                    switch_channel
                    break
                    ;;
                5)
                    deauth_network
                    break
                    ;;
                6)
                    exit 0
                    ;;
                *)
                    echo "Invalid Selection."
                    sleep 1
                    break
                    ;;
            esac
        done
    done

}